<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration PUBLIC "-//log4j/log4j Configuration//EN" "log4j.dtd">

<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

    <!-- 日志输出到控制台 -->
    <appender name="console" class="org.apache.log4j.ConsoleAppender">
        <!-- 日志输出格式 -->
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="%p [%t][%d{HH:mm:ss SSS}] [%l] %m%n"/>
        </layout>
    </appender>


    <!-- 输出日志到文件 -->
    <appender name="fileAppender" class="org.apache.log4j.FileAppender">
        <!-- 输出文件全路径名-->
        <param name="File" value="/log/fileAppender.log"/>
        <!--是否在已存在的文件追加写：默认时true，若为false则每次启动都会删除并重新新建文件-->
        <param name="Append" value="false"/>
        <param name="Threshold" value="INFO"/>
        <!--是否启用缓存，默认false-->
        <param name="BufferedIO" value="false"/>
        <!--缓存大小，依赖上一个参数(bufferedIO), 默认缓存大小8K  -->
        <param name="BufferSize" value="512"/>
        <!-- 日志输出格式 -->
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="[%p][%d{yyyy-MM-dd HH:mm:ss SSS}][%c]-[%m]%n"/>
        </layout>
    </appender>

    <!-- 日志输出到文件，可以配置多久产生一个新的日志信息文件 -->
    <appender name="accessLog" class="org.apache.log4j.DailyRollingFileAppender">
        <!-- 文件文件全路径名 -->
        <param name="File" value="log/access.log"/>
        <param name="Append" value="true"/>
        <!-- 设置日志备份频率，默认：为每天一个日志文件 -->
        <param name="DatePattern" value="'.'yyyy-MM-dd'.log'"/>

        <!--每分钟一个备份-->
        <!--<param name="DatePattern" value="'.'yyyy-MM-dd-HH-mm'.log'" />-->
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="%p [%t][%d{HH:mm:ss SSS}][%c]-%m %n"/>
        </layout>
    </appender>

    <!-- 输出日志到文件，当文件大小达到一定阈值时，自动备份 -->
    <!--    <appender name="loaderLog" class="org.apache.log4j.RollingFileAppender">-->
    <!--        &lt;!&ndash; 日志文件全路径名 &ndash;&gt;-->
    <!--        <param name="File" value="log/loader.log"/>-->
    <!--        &lt;!&ndash;是否在已存在的文件追加写：默认时true，若为false则每次启动都会删除并重新新建文件&ndash;&gt;-->
    <!--        <param name="Append" value="true"/>-->
    <!--        &lt;!&ndash; 保存备份日志的最大个数，默认值是：1  &ndash;&gt;-->
    <!--        <param name="MaxBackupIndex" value="2"/>-->
    <!--        &lt;!&ndash; 设置当日志文件达到此阈值的时候自动回滚，单位可以是KB，MB，GB，默认单位是KB，默认值是：10MB &ndash;&gt;-->
    <!--        <param name="MaxFileSize" value="10MB"/>-->
    <!--        &lt;!&ndash; 设置日志输出的样式 &ndash;&gt;`-->
    <!--        <layout class="org.apache.log4j.PatternLayout">-->
    <!--            &lt;!&ndash; 日志输出格式 &ndash;&gt;-->
    <!--            <param name="ConversionPattern" value="[%d{yyyy-MM-dd HH:mm:ss:SSS}] [%-5p] [method:%l]%n%m%n%n"/>-->
    <!--        </layout>-->
    <!--    </appender>-->

    <appender name="loaderLog" class="org.apache.log4j.RollingFileAppender">
        <param name="File" value="log/loader.log"/>
        <param name="Append" value="true"/>
        <param name="MaxFileSize" value="10MB"/>
        <param name="MaxBackupIndex" value="2"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="%p [%t][%d{HH:mm:ss SSS}] [method:%l]%n%m%n"/>
        </layout>
    </appender>


    <!--
        1. 指定logger的设置，additivity是否遵循缺省的继承机制
        2. 当additivity="false"时，root中的配置就失灵了，不遵循缺省的继承机制
        3. 代码中使用Logger.getLogger("logTest")获得此输出器，且不会使用根输出器
    -->
    <!--连接器logger-->
<!--    <logger name="com.example.connector" additivity="false">-->
<!--        <level value="INFO"/>-->
<!--        <appender-ref ref="accessLog"/>-->
<!--    </logger>-->

    <!--类加载器logger,只报告类加载失败等-->
<!--    <logger name="com.example.loader" additivity="false">-->
<!--        <level value="WARN"/>-->
<!--        <appender-ref ref="loaderLog"/>-->
<!--    </logger>-->


<!--测试直接打到console上，而且是all级别-->
    <root>
        <level value="ALL"/>
        <appender-ref ref="console"/>
<!--        <appender-ref ref="fileAppender"/>-->
        <!--        <appender-ref ref="rollingAppender"/>-->
        <!--        <appender-ref ref="dailyRollingAppender"/>-->
    </root>

</log4j:configuration>
